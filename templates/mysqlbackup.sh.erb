#!/bin/bash
#
# MySQL Backup Script
#  Dumps mysql databases to a file for another backup tool to pick up.
#
# MySQL code:
# GRANT SELECT, RELOAD, LOCK TABLES ON *.* TO 'user'@'localhost'
# IDENTIFIED BY 'password';
# FLUSH PRIVILEGES;
#
##### START CONFIG ###################################################

USER=<%= @backupuser %>
PASS=<%= @backuppassword %>
DEFAULTS=<%= @defaults %>
MYSQLDUMPOPS="--opt --flush-logs --single-transaction"
<% if @defaults_provided -%>
MYSQLDUMP="mysqldump --defaults-file=${DEFAULTS} ${MYSQLDUMPOPS}";
MYSQL="mysql --defaults-file=${DEFAULTS} ${MYSQLDUMPOPS}"
<% else -%>
MYSQLDUMP="mysqldump -u${USER} -p${PASS} ${MYSQLDUMPOPS}";
MYSQLDUMP="mysql -u${USER} -p${PASS} ${MYSQLDUMPOPS}";
<% end -%>
DIR=<%= @backupdir %>
ROTATE=<%= [ Integer(@backuprotate) - 1, 0 ].max %>

PREFIX=mysql_backup_

##### STOP CONFIG ####################################################
PATH=/usr/bin:/usr/sbin:/bin:/sbin

set -o pipefail

cleanup()
{
    find "${DIR}/" -maxdepth 1 -type f -name "${PREFIX}*.sql*" -mtime +${ROTATE} -print0 | xargs -0 -r rm -f
}

<% if @delete_before_dump -%>
cleanup

<% end -%>

databases=`$MYSQL -s -e "SHOW DATABASES;" | sed -e 1d`

for dbname in $databases; do
 outfile=${DIR}/${PREFIX}${dbname}`date +%Y%m%d-%H%M%S`.sql<% if @backupcompress %>.bz2<% end  %>
 $MYSQLDUMP $dbname <% if @backupcompress %>| bzcat -zc <% end %>> $outfile
 chmod 700 $outfile
done

<% unless @delete_before_dump -%>
if [ $? -eq 0 ] ; then
    cleanup
fi
<% end -%>
